//
// Generated by Bluespec Compiler, version 2011.06.D (build 24470, 2011-06-30)
//
// On Thu Sep  1 16:21:38 IST 2011
//
// Method conflict info:
// Method: decode
// Conflict-free: decode
//
//
// Ports:
// Name                         I/O  size props
// decode                         O     7
// RDY_decode                     O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// decode_hex                     I     4
//
// Combinational paths from inputs to outputs:
//   decode_hex -> decode
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkh2s(CLK,
	     RST_N,

	     decode_hex,
	     decode,
	     RDY_decode);
  input  CLK;
  input  RST_N;

  // value method decode
  input  [3 : 0] decode_hex;
  output [6 : 0] decode;
  output RDY_decode;

  // signals for module outputs
  wire [6 : 0] decode;
  wire RDY_decode;

  // remaining internal signals
  wire [4 : 0] INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d56;
  wire [2 : 0] INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d55;
  wire x__h1132,
       x__h1134,
       x__h1443,
       x__h1445,
       x__h1447,
       x__h146,
       x__h1777,
       x__h1885,
       x__h2001,
       x__h2003,
       x__h2005,
       x__h2415,
       x__h2417,
       x__h2533,
       x__h2535,
       x__h2537,
       x__h2954,
       x__h2956,
       x__h2958,
       x__h3041,
       x__h3043,
       x__h3045,
       x__h3148,
       x__h3150,
       x__h603,
       x__h605,
       x__h607,
       x__h609,
       y__h1444,
       y__h1446,
       y__h1450,
       y__h2002,
       y__h2006,
       y__h2008,
       y__h2534,
       y__h2538,
       y__h2955,
       y__h2957,
       y__h2961,
       y__h3149,
       y__h3151,
       y__h608,
       y__h610;

  // value method decode
  assign decode =
	     { x__h146 | y__h2534,
	       x__h603 | x__h1885,
	       INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d56 } ;
  assign RDY_decode = 1'd1 ;

  // remaining internal signals
  assign INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d55 =
	     { x__h2001 | y__h2002,
	       x__h2533 | y__h2534,
	       x__h2954 | y__h2955 } ;
  assign INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d56 =
	     { x__h1132 | x__h1885,
	       x__h1443 | y__h1444,
	       INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d55 } ;
  assign x__h1132 = x__h1134 | y__h2955 ;
  assign x__h1134 = y__h2538 & y__h3149 ;
  assign x__h1443 = x__h1445 | y__h1446 ;
  assign x__h1445 = x__h1447 | y__h2957 ;
  assign x__h1447 = x__h2537 | y__h1450 ;
  assign x__h146 = x__h1447 | y__h608 ;
  assign x__h1777 = x__h2417 & decode_hex[1] ;
  assign x__h1885 = x__h3150 & decode_hex[1] ;
  assign x__h2001 = x__h2003 | y__h2957 ;
  assign x__h2003 = x__h2005 | y__h2006 ;
  assign x__h2005 = x__h2537 | y__h2008 ;
  assign x__h2415 = x__h2417 & y__h3151 ;
  assign x__h2417 = decode_hex[3] & y__h2961 ;
  assign x__h2533 = x__h2535 | y__h2957 ;
  assign x__h2535 = x__h2537 | y__h2538 ;
  assign x__h2537 = x__h2956 & decode_hex[0] ;
  assign x__h2954 = x__h2956 | y__h2957 ;
  assign x__h2956 = x__h2958 & y__h3151 ;
  assign x__h2958 = x__h3045 & y__h2961 ;
  assign x__h3041 = x__h3043 & decode_hex[1] ;
  assign x__h3043 = x__h3045 & decode_hex[2] ;
  assign x__h3045 = ~decode_hex[3] ;
  assign x__h3148 = x__h3150 & y__h3151 ;
  assign x__h3150 = decode_hex[3] & decode_hex[2] ;
  assign x__h603 = x__h605 | y__h2955 ;
  assign x__h605 = x__h607 | y__h608 ;
  assign x__h607 = x__h609 | y__h610 ;
  assign x__h609 = y__h2006 & decode_hex[0] ;
  assign y__h1444 = x__h1885 & decode_hex[0] ;
  assign y__h1446 = x__h1777 & y__h3149 ;
  assign y__h1450 = y__h2006 & y__h3149 ;
  assign y__h2002 = x__h2415 & decode_hex[0] ;
  assign y__h2006 = x__h3043 & y__h3151 ;
  assign y__h2008 = y__h2538 & decode_hex[0] ;
  assign y__h2534 = x__h3148 & decode_hex[0] ;
  assign y__h2538 = x__h2958 & decode_hex[1] ;
  assign y__h2955 = x__h3148 & y__h3149 ;
  assign y__h2957 = x__h3041 & decode_hex[0] ;
  assign y__h2961 = ~decode_hex[2] ;
  assign y__h3149 = ~decode_hex[0] ;
  assign y__h3151 = ~decode_hex[1] ;
  assign y__h608 = x__h1777 & decode_hex[0] ;
  assign y__h610 = x__h3041 & y__h3149 ;
endmodule  // mkh2s

