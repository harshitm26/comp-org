//
// Generated by Bluespec Compiler, version 2011.06.D (build 24470, 2011-06-30)
//
// On Sat Sep 24 01:38:39 IST 2011
//
// Method conflict info:
// Method: decode
// Conflict-free: decode, dispsegment
//
// Method: dispsegment
// Conflict-free: decode, dispsegment
//
//
// Ports:
// Name                         I/O  size props
// decode                         O     7
// RDY_decode                     O     1 const
// dispsegment                    O     4 const
// RDY_dispsegment                O     1 const
// CLK                            I     1 unused
// RST_N                          I     1 unused
// decode_hex                     I     4
//
// Combinational paths from inputs to outputs:
//   decode_hex -> decode
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkh2s(CLK,
	     RST_N,

	     decode_hex,
	     decode,
	     RDY_decode,

	     dispsegment,
	     RDY_dispsegment);
  input  CLK;
  input  RST_N;

  // value method decode
  input  [3 : 0] decode_hex;
  output [6 : 0] decode;
  output RDY_decode;

  // value method dispsegment
  output [3 : 0] dispsegment;
  output RDY_dispsegment;

  // signals for module outputs
  wire [6 : 0] decode;
  wire [3 : 0] dispsegment;
  wire RDY_decode, RDY_dispsegment;

  // remaining internal signals
  wire [4 : 0] INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d56;
  wire [2 : 0] INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d55;
  wire x__h1135,
       x__h1137,
       x__h1446,
       x__h1448,
       x__h1450,
       x__h149,
       x__h1780,
       x__h1888,
       x__h2004,
       x__h2006,
       x__h2008,
       x__h2418,
       x__h2420,
       x__h2536,
       x__h2538,
       x__h2540,
       x__h2957,
       x__h2959,
       x__h2961,
       x__h3044,
       x__h3046,
       x__h3048,
       x__h3151,
       x__h3153,
       x__h606,
       x__h608,
       x__h610,
       x__h612,
       y__h1447,
       y__h1449,
       y__h1453,
       y__h2005,
       y__h2009,
       y__h2011,
       y__h2537,
       y__h2541,
       y__h2958,
       y__h2960,
       y__h2964,
       y__h3152,
       y__h3154,
       y__h611,
       y__h613;

  // value method decode
  assign decode =
	     { x__h149 | y__h2537,
	       x__h606 | x__h1888,
	       INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d56 } ;
  assign RDY_decode = 1'd1 ;

  // value method dispsegment
  assign dispsegment = 4'b0111 ;
  assign RDY_dispsegment = 1'd1 ;

  // remaining internal signals
  assign INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d55 =
	     { x__h2004 | y__h2005,
	       x__h2536 | y__h2537,
	       x__h2957 | y__h2958 } ;
  assign INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d56 =
	     { x__h1135 | x__h1888,
	       x__h1446 | y__h1447,
	       INV_decode_hex_BIT_3_AND_INV_decode_hex_BIT_2__ETC___d55 } ;
  assign x__h1135 = x__h1137 | y__h2958 ;
  assign x__h1137 = y__h2541 & y__h3152 ;
  assign x__h1446 = x__h1448 | y__h1449 ;
  assign x__h1448 = x__h1450 | y__h2960 ;
  assign x__h1450 = x__h2540 | y__h1453 ;
  assign x__h149 = x__h1450 | y__h611 ;
  assign x__h1780 = x__h2420 & decode_hex[1] ;
  assign x__h1888 = x__h3153 & decode_hex[1] ;
  assign x__h2004 = x__h2006 | y__h2960 ;
  assign x__h2006 = x__h2008 | y__h2009 ;
  assign x__h2008 = x__h2540 | y__h2011 ;
  assign x__h2418 = x__h2420 & y__h3154 ;
  assign x__h2420 = decode_hex[3] & y__h2964 ;
  assign x__h2536 = x__h2538 | y__h2960 ;
  assign x__h2538 = x__h2540 | y__h2541 ;
  assign x__h2540 = x__h2959 & decode_hex[0] ;
  assign x__h2957 = x__h2959 | y__h2960 ;
  assign x__h2959 = x__h2961 & y__h3154 ;
  assign x__h2961 = x__h3048 & y__h2964 ;
  assign x__h3044 = x__h3046 & decode_hex[1] ;
  assign x__h3046 = x__h3048 & decode_hex[2] ;
  assign x__h3048 = ~decode_hex[3] ;
  assign x__h3151 = x__h3153 & y__h3154 ;
  assign x__h3153 = decode_hex[3] & decode_hex[2] ;
  assign x__h606 = x__h608 | y__h2958 ;
  assign x__h608 = x__h610 | y__h611 ;
  assign x__h610 = x__h612 | y__h613 ;
  assign x__h612 = y__h2009 & decode_hex[0] ;
  assign y__h1447 = x__h1888 & decode_hex[0] ;
  assign y__h1449 = x__h1780 & y__h3152 ;
  assign y__h1453 = y__h2009 & y__h3152 ;
  assign y__h2005 = x__h2418 & decode_hex[0] ;
  assign y__h2009 = x__h3046 & y__h3154 ;
  assign y__h2011 = y__h2541 & decode_hex[0] ;
  assign y__h2537 = x__h3151 & decode_hex[0] ;
  assign y__h2541 = x__h2961 & decode_hex[1] ;
  assign y__h2958 = x__h3151 & y__h3152 ;
  assign y__h2960 = x__h3044 & decode_hex[0] ;
  assign y__h2964 = ~decode_hex[2] ;
  assign y__h3152 = ~decode_hex[0] ;
  assign y__h3154 = ~decode_hex[1] ;
  assign y__h611 = x__h1780 & decode_hex[0] ;
  assign y__h613 = x__h3044 & y__h3152 ;
endmodule  // mkh2s

